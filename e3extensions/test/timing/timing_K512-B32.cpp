#include <iostream>
#include "../../src/e3extensions/secureint.h"
#include <papi.h>

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	long long s, e;

	s = PAPI_get_real_cyc();
	for (int i = 0; i < 1000000; i++) asm volatile("nop");
	e = PAPI_get_real_cyc();
	cout << "For loop: " << (e-s) << " cycles\n";

	s = PAPI_get_real_cyc();
	Cryptosystem cs("7122805247137745648192608495981912043916663725851558527698325712032902179680594859186652314979577160069771813756384600551976968553409433068298760117017929",32,"7932478027991841883771706778604176545049900362904932919282398187052871033548455750859380435117837443820849180184216204219009393472379410486446783951142528372113166516883311783185359724656620760444587454512458131838643960138819369283256869146432085757239825715466451427021499606902744172017857254745072233138",{"29566496203292576652875971716819468075900214160786840011244098723036451709403231867125165828450229907272903606293064193569821251753031277148688340537043096927235750995320852230224159002309372540128344889998806821923820173670511959553724274171438870221545471759922226001828063469744210660643921988600663739606","5371403812913099883005444685637258627560671057837871113172299384678223141918656227537631145042439556759260652262977621460771953469567870726262233231285676942507435320862858311306244238109268661809971475383214581333294162924691520019472876852407538831107075002076004260783659880291811929788866578764548979256","24473225453638838755373670825102822330855173109994064531017446791354671665795045138284377539330442052417340613666449613491312037065545834011165064950356713445242782406880246218415542035140063147789706036477548515845123605702701889768731676973094469502745815820333075875229301443529016334419872602715163735773","6215288963013687766766096163052700180293188502429539202391357208704040520489039170220973239280144887935863877740077725393837168447541790571806732885466496802717044413892742072609750435291980661294753569526389179292681180995326823938147601553638038859818576860740446310227217635999163269002721769225569809813","20694975276489444685553144921871271725040223357139367061082324434152894274464808771108840599350253998599869891001857895094310560160489510080788215622933920189826299549956264409104348510032154561438092509209161900728205373146451596631204265707728823948803816222051123498841194861964910908235074319474967282396","32128400343712226820276208894733466079222899980125346404881557349786931363567218851419719276005236119035988489819345772151417100144618264907497932202997950282494602445321373709322188485688686270720077148651652986704738666129755098287191734857959054785941848588004735185959233900333248738373690946854024857547","3548376567694575391074297814632542695671435535592345575958220351970604799622217206506793452747057878779539748525481711143609318923859966108102548681152627066019811258661558469074398286023019884044997509696195905393953611424834389023601571573794256681090335564863692178826016896804670827149791373222882771765","35695391775622375383590627995593231816228252183173298077444927344627100443203244351852108604048691434247758199752338695809841605892748229737596877023515062181490181637065773285415717203119741543553396499124682487064850627122611194919181958067299687016542698203653967221917374529092101746869903687521670194607","40893162624912325385674739836787414851494617159373730359681648283504177160315177541176674124672664546876357977582382810944592914389089600276753066743639516294203929142496612211948900258302249229472466363983971530231253590722570484939368378301858102093067988808975900262483043788136144063653270207333199593209","6846406347350638851719185798449267227046250752262729998680622594654515627181234539292785067035716276358780011861858913064980930777972246192758489520865152953681886583535618979237257962909776410111401941260249976077446915686815013252400121216134479004223233711083790018885124794129093855218437895739270376293","17646212679420364601502941413283804425456236987299232694275931438153697606733859927549022371858494620838351086761323272456253414873556419730532981445437999756034389047338935068237220403051191680563295114470389247960015243287555318270136508861146903917443145376480652792794358211998242056341390695774267588455","15910894538220146826947386744048778644079184859772839320183278728000225760027384697305273143276933500133172204955112851261349363143393431354965101517515587634607786093732894445283158213152809750553827533091017464487181469208291722568306458452203253923478556483865830564622460694254440577646899151413851607932","19186480265885853393965196238774457868155184472206086294905347126532575850013026355547286688425324082798549935545361082902492623445980133814349759709789643895525497225738510437582437564400551948087036603423928307672798876342941711389485833368607214881774865053173836391518671653228494196941081844855986926569","3526363746295484492012047810014295368341339165901140615325405836284970514907866934737575622750879010420369960644176152919362713623042780005854408376479753459551546642050276901462509056737915751812262615256532837431819694339609700512462031684473801354873969268466255820532018364447067863631628134050802052438","2889929238990618015782247655733640725070446020605301033940056676632597719579841045277302808782188380736226133331846291471557457285875726020755450786361446996981481023893550834947414850568417179364109414917408772983154666605161797955655336774722452277420006508328898671270704096667669054653609143887790745888","26204803906728830729343461200523337174483339512934307370849837595728057201083974921471780111113448173424008578251946318725004605063146650838343754583937689602312093788689493324811636458343569540946778929728494394196260596576385750596391044260911662626619045941187980706029142030333732689164816950219974184212","11697424790167748240408949584862364157135237105668068589231621659157315927867168457946136289795456269839164802046162456650745168220753360949125517329591923258778923771579485902911386922458856019382876664226854920857690531848468701866801958597619265588876546943487785594788794075012483510231791154036886722021","37000021705545167389198602334675517584175491132239938447335033955644594307566112596784172516362677906403908321500356809393894446759557144783529055662826281085301555962327052650514720492257697918634968354682476347406794828946516589177397216158642466637043798660894536970591347563923908767814074445480724932437","21933112142754360939798663925960679759454156657388107053000136217768075509527789438285718017052969564617995025158591092616456662530581363409624354758546684180199105761426826037172807899868224806968314521151995211448619368444904361842545360891783985263791076523132996568336563834191629818856457877481649982227","163746110254932432799777136317978764163908267360920061464289968695617648949645184469522817500726622381891798005932068578494935062247084882888722677739825726710649087838767597181832603651829392116070916945976680301045633157158881931863440305568056418976761200023942956177994895426143386182324629828088622543","45394070810839337973882508189148928561099145225666170346721721552207144701824208526214525847052433870361305560152676980242085637638470996951530015052913220995500448871911455051725659182435905798455271079254101699290375599474502885815125583594974278306612171232471014316242394168897918547230238363585304279421","39298428902282366230603678138095700220498493583396837929377861509143733364392478685722186970486900844843023372271145445387829139541181643459980535879342373619474079571054278150193482278510393726930735479185456114421288755514181196016230666700741746017447755949497713696405788673641897506842531395771895311366","25155115859583443478532377776413364098134093495902444856784621446587576676272858440970106966650340780923962646969213348162048032820519593426131634414840664086866851302897691727308455561794561817421813577710174310240901319979574277154922627158216547170434683173151128172444034428346264137686032654819851795684","32789740374854951024387559986781633847885414678170750746816044040257952146691416873603849495280837436985225514300141226689144074368871148399319088547824180350776525625351617871672568844575432795102280453572867711615877610407040417873252038340386272203446436990876134031939943558970001178987448007400805769895","16091929449730015938864892215630780670954143779709324339039312142099382245512592075079367888034533030541782877625011597485098532221408021177133321035401149499830550428248381350414898864490211775142362678922505436876050521775289182153496603678959390582002126576334560851248047568495533178819184757008329577171","29818893018611718242537727969910260723034952467180526767792769449554582796510144271155398398379454430410675269079232178739512549155419454135163262216159317725567205213570568327440038358106486261432161820122973981952027661932226549712180231016733875615309937332035982585730385100011517260949372447666054543210","41580017318695920958095597009901153515762222133503508906451456664837153579668012216413219143366004308274695872054304097651785987285473703342453121323364711806181905754133241863375541382529377701917501233907856335376419922543535003148109307722054975040424064296450135849969414150560269284336449057348253209328","18409013737614057497256092119949531341115759664119872106348238588079078454212234368755827364126481057873331915937313042567230903322995029451589117748322118022102302609079717529308680518683003777713520793395887850632404075661088188831810190882480940088188360987410332007553913631504015961362361772413792576773","49776803265645164073812299475466427049639884855739903048846707663531997222185873308827993854079055941623199930797560573879194663528922873469550317285767754325039501057782487463275375909383014074402715876063425800725610896994544973201846516779117419298881617566622918573614099507059064589603517562680737945883","9560614940350989136799432489495687219099897126758092326703271004836744393807108782361403218589611932015337923691818790429505138079841548636776543335451845649269276372123816148016810652006389271960426435935869092822584249548185395983945599064511332484274579211281727469083906515825249907877442919365657928504","49992392248337839596556302503187856776740678135187032275409455584201434740998605699375715001256531265048878003913367790273902033816160977279500633871122954750298225064774870216853068528191772665653412489792158645923961504864954971713574538848437132941378965829044440782507728341609697249329495130767419501552","8066885369575877778468734763088860397470712543344647898680154550526771286063631560589784042941052977990673289546859484964721047610737117917362081425332965980319342623340009657986489928438183829209029427673490540877964022314006219578348207851575014248123156431901745044704906185925462894138241617682971390018","39461396323069286594179359264348588848767932733403524388164675126947375043969643470776865188353886498688454432264552175307089030517255539496087742959469843645056502560343132555551989257763637114530096778196969691617376124614158398614428325425107111664156967139263440441304036137441988510444076343313253859868"},"18403974941562063796004041094907233896269702643856933866343548935399030242467377912945654127019013467435749501602384743680164442207195148604442255255614580555735151686854389646092416851167827640621642914237639001313325367661117693807966887343093781717047240716823677219682568692829093073510938462358565061570","273940771621955100228944628866931308431557055809073651371281565426428060895400719517128796819728652517548752775585038249895933874118680512369613020774705521555552886776980234259383833175028523335497318357305730955671977555449559512519186984525111786521377396570837609632862896799393744133586452501048985165", libgDir, gFunctionName);
	e = PAPI_get_real_cyc();
	cout << "Cryptosystem cs: " << (e-s) << " cycles\n";

	s = PAPI_get_real_cyc();
	SecureInt a("19017643972017278154721784013602792248182461546575935764937100689039182115455231984406495665311949125357876468551838265886530091226115644661669607125231434804057134267289482621928877736037747164906830162194025979157473684743115283930913746465962091103355071920570537186017326689824719141935682155618891873553",cs);
	e = PAPI_get_real_cyc();
	cout << "SecureInt a: " << (e-s) << " cycles\n";

	s = PAPI_get_real_cyc();
	SecureInt b("11500110767150389001363639859419511289977188863251994797190383579318438428924443300866542953090765851646192120545860464910679266938242007447604149549659679486836605933354280790850654442615066923470498619332735925154936988646506774904281403254522495162860580882226151871885251100114852323021635709769834852092",cs);
	e = PAPI_get_real_cyc();
	cout << "SecureInt b: " << (e-s) << " cycles\n";

	s = PAPI_get_real_cyc();
	SecureInt c;
	e = PAPI_get_real_cyc();
	cout << "SecureInt c: " << (e-s) << " cycles\n";

	s = PAPI_get_real_cyc();
	c = a + b;
	e = PAPI_get_real_cyc();
	cout << "c = a + b: " << (e-s) << " cycles\n";

	s = PAPI_get_real_cyc();
	c = a * b;
	e = PAPI_get_real_cyc();
	cout << "c = a * b: " << (e-s) << " cycles\n";

	s = PAPI_get_real_cyc();
	c = SecureInt::G(a,b);
	e = PAPI_get_real_cyc();
	cout << "c = G(a,b): " << (e-s) << " cycles\n";	

	return 0;
}

