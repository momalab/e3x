#include <iostream>
#include "../../src/e3extensions/secureint.h"

#define IT 10
#define MOD (IT / 10)

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("145276937757435316404766033930918618589",8,{"12030718580280637837106813046114182553962954968903979586391192282830927439702","3893612515017364744828865500972850253401865243834657646266139427748240269629","7443549477136760303692441076819647815216377115791671822625118497215205268749","9714431996269086074506329299914460190419031624563202236606328878912152093402","20189251704524305513549776499391425686649367690297352388693617359760634776210","17691805802230917136296600398562016299180553738141867419395281888923807261141","12290301625209548522729490025832768349203566373487907794551293427411492069521","2522634653466493880010269515005473867731774583725691808003985169130534878984","19630068436727549433953465777595429850555307013561794135832969644099002655066"}, libgDir, gFunctionName,"9195418114867121021417337121451604806390540977828487655011758587000741683584");
	SecureInt a ("11371069273249746199250724619201139555099228792070926013616704391037774843524",cs);
	SecureInt b ("15996022439217002889293699856467755370462711090930557353931454768800017810437",cs);
	SecureInt c;
	unsigned bi = 1;

	for (int i = 0; i < IT; i++)
	{
		//a += b;
		//a -= b;
		a *= b;
		//a <<= b;
		//a <<= bi;
		//a >>= b;
		//a >>= bi;
		//a = SecureInt(bi,cs);
		//a = SecureInt::G(a,b);
		//a = a == b;
		//a = a != b;
		//a = a > b;
		//a = a < b;
		//a = a >= b;
		//a = a <= b;
		
		if ((i % MOD) == 0) cout << i << "\n";
		//cout << i << "\n";
	}
	cout << a.str() << "\n";

	return 0;
}

