#include <iostream>
#include "../../src/e3extensions/secureint.h"

#define MESSAGE "Enter a text (ctrl c to exit): "

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("91994345406158711717112785903655195222881881606000129867811897080721865586807019660885612916113860704335014552090747268816297373499966514137323795924524823807941458990291084069018659909014158438551393574576951602435695598426571496276699041510225221474076287036738607316713054249649849247791728367546183175757",8,{"3906604231401066462668524404923495230958670616155835021820132863365317704420319715681365758648572756940359660629373002319251730827514759655763136919351599587696170415391517730552949015962635842979107086958224531347485056445553720099733764410022015011905945991205437962569029007795281241666776593063893967365433820653820263077685813265475391642363086529578320630482393086360369177046678673041587095038049993533549888342897455061864192226882894883174059660822321600418338163913398199282794465128691807605448824616722154501684105942886105836522462711626102461252267658151351685963767974173069913251991308108298795051680","4561035918675274214029293599885988671182881343892694479703745109926376680053909420206002917574587470962019981301715066345990180220099219795947229787181248934370546712459544538497565649593224831382714169915022779777104315998194444920825898939382095496473083012835150607376243655552679428431829890875868316151106945567562789397311921189924258748208890541288583036905967741988108171252047667735539478544826270992763944691459345312992098086758462021906858149111557586439573930849903338084097637333343215354899658629828137271457539972335932098821042084626198692226481038725345523919719073343582096876205629375782949986037","6173769860151871018456169914617278213431745085461146376250061828060782607416189910520037154033446337332814250094333833771433296329087747608857504724156709297563143859966434888329392226340319892573875287909084411172616790494588747173651504402160664651108253582596238416611144202054500852007014753296128321828399834012997337145775958877694670441500516826456533662293053593793906932674272347281564169129766909992835323673982106899434634509639682934246144540373327448387939692549728002356747201901093868776760695908803196765852357567428588275259848325926819382056942865619494599644651611936712275940075051130018457006599","6687329738988319329565431583045119202356950827262284776375549472758346007696504941191846084645338324176976632753398153581835470644945761984546696052521078714668058295930349775265124738599456594122580501020965981541319838587601904310760301044215516063828338672179596306008558681330296718164561752700115864114220278889245013982221463456943230637910181423063501183253910814316506878278802659815110724249770372819522694671114297193226027248378983744301253761973967614035984589228113060532623651600852819806883607686471918092455234647784923522337738206497338484185092289594590149886948034102309555908852424216717784281271","1621201556564747626955764111065915908373029478021941756657814315207512436102013926111672317288782310608105903941198398643193927366549368329892549375076205758017240622911431386124802519710079992479870498190575724088882660987618264665984006949439176325771445566338383146469226706494385836336621525511170531317628068643990786142501524079494925073825775971747714046069415127320310996930565301710041410537543449439128566970370254535789209978878788186381037125955572463439090002203624939240424155608070314735066350963198121515296232534934418334512891106351891886572472978975770192657021474437645743767014000145544627175078","2171400869800084183731821360790195292956828506893966400285286715981708505467055089017810453382330706087013428204195096589768740617405853257901109743089076449713945670965251007314453909013427115339694885473778358670321470954721875187618053210337022508632590174357469285163360711117880921231939035199845815059648522857609268817666048688564650461660406813552574588857591881893997293049879046359505253808248309005439955474923551871156274225104939528649117726700639228270316292127200071422021461529580433341718466576240376099363055966990834827739671677305151152444286062568054761073794943838649779652034213595647510688957","2068194387805947311032516679984460167896354496768280159871405347187404579497703307656548761573965628806383324499527184980132328576027151407425942799239650838937805409226075592589559978913256316674090038994097249940021098374747051055596847912404297890072077006035819583185184102448218292611030796146497265887167959386596691182148966621036545405868498634768172982522687062364272973522926171180997965028868744921280832119078671446166779880918165544969395770428912224673991921562262088488877326411656868313126534944365688165027150832469421291518087074039574536160669065734217953965751955717304775063817463757607740930312","3052599432911483782401245029234943523370642062210490090976987343302484832263742395156384387857542480442643478678913268419421716404803560448469532458642181635002136709489884647090470984635921703360782019196802461348926081890412038363773740720422256825579188651892945803011649338958782082561723375497748755609623363873080930562468177975668530441671936396132382595831612131240642008888390267993777624433466610752017303029361445825452385096322419652358555913963362352989492287332094082325162392575786232274879768031894642113389850413741126401058668774983902188410850341249289206672884352890467121435464705971829791393677","2292140417400041154403274200721044716707031386632825879600664959815774171459019313054823841626809385597829973467478426916656288627761235627149126339169300820151141104753255086499264251197362317396460325698223885522429448694514030595363818549898106007016907895996278613551822127496386087889902364565697088897695395812292547107285423669658009504810537251714107054914604685637579574328399540732662421227418409683204162634935696157765435980947078979290743037955717833360090092842530976977435722177046701437303197042050672515644760196756063019121541456308682968667815149950262407292808663687241032022936031064824783240496"}, libgDir, gFunctionName,"6723971894908403693087867372287291224894018283916585205544067819202236837721941352262113148010719275636347054977575240413431093723295632506556398821433581971418669157799536844193353491157688777173329986055033231276805526788453182085481598651803898149887559629745116183164397857533485554254863272440696869165769529096819968213354662297788252969708619174241728648893363682711966518802450420897482901514084116829514362087445579369875381050984559249494177303677372161437631340046618131174431308500989153886569574339793507634543764622695586937107594273450052954727122185590727394795061393610221941397132581656274422269681");
	SecureInt a;
	string text;
	char c;

	while (true) {
		cout << "\n" << MESSAGE;
		cin >> text;

		for (unsigned i = 0; i < text.length(); i++) {
			c = text.at(i);
			a = SecureInt(c,cs);
			cout << a.str(); 
		}
	}

	return 0;
}

